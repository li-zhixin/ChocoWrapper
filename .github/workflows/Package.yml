name: Package

on:
  push:
    tags: 
      - '*'

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ChocoWrapper.sln                         
      Wap_Project_Path: .\ChocoWrapper\ChocoWrapper.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.8.2
      with:
        # Optional SDK version to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
        dotnet-version: 5.0.x
        
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}


    # Create the app package by building and packaging the Windows Application Packaging project
    - name: Build project
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration 
      env:
        Configuration: ${{ matrix.configuration }}


    - name: Pack project
      run: dotnet pack $env:Wap_Project_Path  -p:PackageVersion=${{steps.tag.outputs.tag}}  s https://api.nuget.org/v3/index.json
        
    - name: Push package
      run: dotnet nuget push ChocoWrapper.${{steps.tag.outputs.tag}}.nupkg -k ${{secrets.API_KEY}}

   
